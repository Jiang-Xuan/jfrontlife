{"data":{"markdownRemark":{"html":"<h2 id=\"请求方法规范\"><a href=\"#%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95%E8%A7%84%E8%8C%83\" aria-label=\"请求方法规范 permalink\" class=\"custom-class\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>请求方法规范</h2>\n<p>采用 REST 规范</p>\n<ul>\n<li>获取数据 <code class=\"language-text\">GET</code></li>\n<li>修改数据 <code class=\"language-text\">POST</code></li>\n</ul>\n<h2 id=\"接口格式规范\"><a href=\"#%E6%8E%A5%E5%8F%A3%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83\" aria-label=\"接口格式规范 permalink\" class=\"custom-class\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>接口格式规范</h2>\n<p>接口根字段包含 <code class=\"language-text\">success&lt;boolean&gt;</code>, <code class=\"language-text\">code&lt;number?&gt;</code>, <code class=\"language-text\">message&lt;string?&gt;</code>, <code class=\"language-text\">data&lt;object = {}&gt;</code> 字段</p>\n<ul>\n<li>success 字段表示接口请求的业务后端是否处理成功</li>\n<li>code 一个的接口响应会出现多场景, 用该 code 区分多场景, 注意该 code 必须是一个数字</li>\n<li>message 表示接口响应当前的状态信息, 提示信息</li>\n<li>data 接口响应的数据, 默认必须为一个空对象, 即便在错误的情况下也需要返回一个空对象</li>\n</ul>\n<h3 id=\"列表接口格式规范\"><a href=\"#%E5%88%97%E8%A1%A8%E6%8E%A5%E5%8F%A3%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83\" aria-label=\"列表接口格式规范 permalink\" class=\"custom-class\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>列表接口格式规范</h3>\n<h4 id=\"请求规范\"><a href=\"#%E8%AF%B7%E6%B1%82%E8%A7%84%E8%8C%83\" aria-label=\"请求规范 permalink\" class=\"custom-class\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>请求规范</h4>\n<p><strong>这是一个 <code class=\"language-text\">GET</code> 请求</strong></p>\n<p>一个表格的数据展示一般会有筛选项的出现, 复杂的筛选项会导致请求的复杂, 所以必须有一个规范来约束请求的数据格式</p>\n<p>表格的筛选项一般分为 input 筛选, 也就是文字筛选</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">drugName=foo&amp;drugType=barbar</code></pre></div>\n<p>单选项筛选, radio 式的筛选, 一般用于非是即否的选项, 禁止使用数组来提交单选项式的筛选, 如果考虑后续有可能升级为多选项式的筛选, 也应该重新评估, 不需要做向后兼容.</p>\n<p>由于 url 参数不支持 Boolean, 所以字符串 <code class=\"language-text\">&#39;0&#39;</code> 代表 false, '1' 代表 true.</p>\n<p>这种 Boolean 式的参数命名规范 <code class=\"language-text\">has + 具体业务</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// bad\nhasFoo[0]=&#39;1&#39;&amp;hasBar[0]=&#39;0&#39;\n\n// good\nhasFoo=&#39;1&#39;&amp;hasBar=&#39;0&#39;</code></pre></div>\n<p>多选项式筛选, multiple radio 式的筛选, 一般用于多个选项的筛选, 必须用数组进行提交, 及时目前只有一个选项</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">drugType[0]=&#39;化药&#39;&amp;drugType[1]=&#39;生物制药&#39;</code></pre></div>\n<h4 id=\"响应规范\"><a href=\"#%E5%93%8D%E5%BA%94%E8%A7%84%E8%8C%83\" aria-label=\"响应规范 permalink\" class=\"custom-class\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>响应规范</h4>\n<p>大量的数据, 需要翻页</p>\n<p>该规范分为两种:</p>\n<ul>\n<li>用 head 来控制整个表格的数据展示</li>\n</ul>\n<p>在表格的结构由接口控制的时候尤为有用, 此时数据的渲染的主动权是 head 字段控制.</p>\n<p>渲染数据的方式为遍历 head 字段, head 字段为一个数组, 内部的 对象 中的 dataIndex 来标识这从 list 内部的对象中的哪一个字段中拿取数据</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 业务是否成功</span>\n  success<span class=\"token operator\">&lt;</span>boolean<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 业务 code</span>\n  code<span class=\"token operator\">&lt;</span>number<span class=\"token operator\">?</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 接口信息</span>\n  message<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">?</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 业务数据</span>\n  data<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n    head<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>array<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      dataIndex<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> object<span class=\"token operator\">></span><span class=\"token operator\">?</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 列表数据</span>\n    list<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>array<span class=\"token operator\">&lt;</span>object<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 列表翻页数据</span>\n    pagination<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n      current<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      pageSize<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      total<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> object<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> object<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>用 list 来控制整个表格的数据展示</li>\n</ul>\n<p>接口的表格头不需要接口来控制, 表格的结构是由前端来写在代码中的, 此时数据的渲染的主动权在 前端</p>\n<p>渲染数据的方式为, 前端写定表格的结构, 然后从 list 中拿取对应的数据, 但是此时表格的头部有可能需要一部分的数据由接口返回, 所以 head 不再是一个数组类型</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 业务是否成功</span>\n  success<span class=\"token operator\">&lt;</span>boolean<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 业务 code</span>\n  code<span class=\"token operator\">&lt;</span>number<span class=\"token operator\">?</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 接口信息</span>\n  message<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">?</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 业务数据</span>\n  data<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n    head<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      dataIndex<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        filters<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 列表数据</span>\n    list<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>array<span class=\"token operator\">&lt;</span>object<span class=\"token operator\">>></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 列表翻页数据</span>\n    pagination<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n      current<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      pageSize<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      total<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> object<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> object<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"接口命名规范\"><a href=\"#%E6%8E%A5%E5%8F%A3%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83\" aria-label=\"接口命名规范 permalink\" class=\"custom-class\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>接口命名规范</h2>\n<h3 id=\"单个名词接口\"><a href=\"#%E5%8D%95%E4%B8%AA%E5%90%8D%E8%AF%8D%E6%8E%A5%E5%8F%A3\" aria-label=\"单个名词接口 permalink\" class=\"custom-class\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>单个名词接口</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">https://example.com/api/list</code></pre></div>\n<h3 id=\"多个名词接口\"><a href=\"#%E5%A4%9A%E4%B8%AA%E5%90%8D%E8%AF%8D%E6%8E%A5%E5%8F%A3\" aria-label=\"多个名词接口 permalink\" class=\"custom-class\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>多个名词接口</h3>\n<ul>\n<li>连字符命名法 (👍 最推荐)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">https://example.com/api/foo-list</code></pre></div>\n<ul>\n<li>驼峰式命名法 (🤔 可以接受)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">https://example.com/api/fooList</code></pre></div>\n<ul>\n<li>下划线式命名法 (😔 不推荐)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">  https://example.com/api/foo_list</code></pre></div>","frontmatter":{"date":"April 02, 2019","path":"/前后端交互规范","title":"前后端交互规范","tags":["规范"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}